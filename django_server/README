SETUP

If you are running the app locally, run `setup.sh` on your Debian-based Linux platform (uses apt-get, Ubuntu works too).  If using BlueMix, or some other PaaS, you'll need to configure the appropriate services, currently:
    - postgresql
    - rabbitMQ (for celery) *** not currently in use! BlueMix isn't playing nicely with Celery...
    - Twilio

Run setup_db.sh the first time you create a fresh app (including creating a new DB service on BlueMix!) to get the whole DB setup without user interaction.

GOTCHAS

Memory: you'll need to provide > 1GB of memory for your instance/VM to install django-twilio due to a memory bug with the package 'phonenumbers'. 2GB seems sufficient.

Multiple instances: careful of running multiple instances of the same program connected to the same MQTT broker!  You'll easily create cascading duplicates as each instance escalates / responds to messages. This is more or less handled by the duplicate event detection, but you'll still get duplicated text messages.

For the demo feature, you'll need to create a Device with ID = 'demo' before registering a user, which will associate them with the device if it exists.

ENVIRONMENT VARIABLES

You'll need to use `cf set-env` to define the following env vars:

TWILIO_PHONE_NUMBER=+1xxxxxxxxxx

For running running locally, add the following:
TWILIO_ACCOUNT_SID
TWILIO_AUTH_TOKEN
URL_ROOT  <-- root url of the server, necessary for some Twilio stuff

And here are some additional variables you might want to set:
PHONE_NUMBER <-- your personal phone number to default to for sending messages
EMERGENCY_CONTACT_NUMBER  <-- when someone calls the scale number, they will be redirected to this number.  Useful for questions about project or to report problems, while keeping this number anonymous
